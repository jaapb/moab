(* This file was generated by Ocsigen Start.
   Feel free to use it, modify it, and redistribute it as you wish. *)

[%%shared
	open Eliom_service
	open Eliom_parameter
]

let%server settings_service = create
	~name:"settings"
  ~path:(Path ["settings"])
  ~meth:(Get unit)
  ()

let%server os_github_service =
  extern
    ~prefix:"http://github.com"
    ~path:["ocsigen"; "ocsigen-start"]
    ~meth:(Get unit)
    ()

let%server ocsigen_service =
  extern
    ~prefix:"http://ocsigen.org"
    ~path:[]
    ~meth:(Get unit)
    ()

let%server connect_service =
	create
		~name:"connect"
		~path:No_path
		~meth:(Post (unit, ((string "username" ** string "password") ** bool "keepmeloggedin")))
		()

let%server add_students_service =
	create
		~name:"add_students"
		~path:(Path ["add-students"])
		~meth:(Get unit)
		()

let%server setup_terms_service =
	create
		~name:"setup_terms"
		~path:(Path ["setup-terms"])
		~meth:(Get unit)
		()

let%server setup_sessions_service =
	create
		~name:"setup_session"
		~path:(Path ["setup-sessions"])
		~meth:(Get unit)
		()

let%server edit_blog_service =
	create
		~name:"edit_blog"
		~path:(Path ["edit-blog"])
		~meth:(Get unit)
		()

let%server show_blog_service =
	create
		~name:"show_blog"
		~path:(Path ["show-blog"])
		~meth:(Get (suffix (opt (int64 "uid") ** opt (int "week"))))
		()

let%server register_attendance_service =
	create
		~name:"register_attendance"
		~path:(Path ["register-attendance"])
		~meth:(Get unit)
		()

let%server schedule_presentation_service =
	create
		~name:"schedule_presentation"
		~path:(Path ["schedule-presentation"])
		~meth:(Get unit)
		()

let%server generate_attendance_report_service =
	create
		~name:"generate_attendance_report"
		~path:(Path ["generate-attendance-report"])
		~meth:(Get unit)
		()

let%server view_schedule_service =
	create
		~name:"view_schedule"
		~path:(Path ["view-schedule"])
		~meth:(Get (suffix (int "group")))
		()

let%server submit_report_service =
	create
		~name:"submit_report"
		~path:(Path ["submit-report"])
		~meth:(Get unit)
		()

let%server presentation_feedback_service =
	create
		~name:"presentation_feedback"
		~path:(Path ["presentation-feedback"])
		~meth:(Get unit)
		()

let%server view_presentation_feedback_service =
	create
		~name:"view_presentation_feedback"
		~path:(Path ["view-presentation-feedback"])
		~meth:(Get (suffix (opt (int64 "uid"))))
		()

let%server view_grades_service =
	create
		~name:"view_grades"
		~path:(Path ["view-grades"])
		~meth:(Get unit)
		()

let%server report_feedback_service =
	create
		~name:"report_feedback"
		~path:(Path ["report-feedback"])
		~meth:(Get unit)
		()

let%server view_report_feedback_service =
	create
		~name:"view_report_feedback"
		~path:(Path ["view-report-feedback"])
		~meth:(Get (suffix (opt (int64 "uid"))))
		()

let%client settings_service =
  ~%settings_service

let%client ocsigen_service =
  ~%ocsigen_service

let%client os_github_service =
  ~%os_github_service

let%client connect_service =
	~%connect_service

let%client add_students_service =
	~%add_students_service

let%client setup_terms_service =
	~%setup_terms_service

let%client setup_sessions_service =
	~%setup_sessions_service

let%client edit_blog_service =
	~%edit_blog_service

let%client show_blog_service =
	~%show_blog_service

let%client register_attendance_service =
	~%register_attendance_service

let%client schedule_presentation_service =
	~%schedule_presentation_service

let%client generate_attendance_report_service =
	~%generate_attendance_report_service

let%client view_schedule_service =
	~%view_schedule_service

let%client submit_report_service =
	~%submit_report_service

let%client presentation_feedback_service =
	~%presentation_feedback_service

let%client view_presentation_feedback_service =
	~%view_presentation_feedback_service

let%client view_grades_service =
	~%view_grades_service

let%client report_feedback_service =
	~%report_feedback_service

let%client view_report_feedback_service =
	~%view_report_feedback_service

(* The OS lib needs access to the settings service to perform
   redirections to it. We need to register it *)
let%server () = Os_services.register_settings_service settings_service
